<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="15.1">
  <help_text>Space for diagram notes</help_text>
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>800</x>
      <y>450</y>
      <w>450</w>
      <h>650</h>
    </coordinates>
    <panel_attributes>GameConsole
--
-_out: ostream&amp;
-_in: istream&amp;
-_board: shared_ptr&lt;LocalBoard&gt; const
-_control: shared_ptr&lt;GameController&gt; const
-_game_client: shared_ptr&lt;GameClient&gt; const
-_letter_width: uint8_t const
-_number_width: uint8_t const
-_gap: string const
-_grid_width: size_t const
-_width: size_t const
-_map_key: vector&lt;string&gt;
-_my_turn: bool
-_valid_last_input: bool
--
+printChangeTurn(): void
+printSideBySide(left: vector&lt;string&gt;, right: vector&lt;string&gt;): void
+printCenter(board: vector&lt;string&gt;): void
+updatePlaceShip(status: InputStatus): void
+updateGame(status: InputStatus): void
+waitGame(): void
+handleFire(): void
+handlePlaceShip(): void
+display(): void override
+displayError(): void override
+update(): void override
+handleInput(): ReturnInput override
+length(s: string): constexpr size_t
+toString(type: CellType): string
+createGameHeader(): string
+createPlaceShipHeader(): string
+createGridLabel(my_side: bool): string
+createGrid(my_side: bool): vector&lt;string&gt;
+createMapKey(): vector&lt;string&gt;
+createBoatsKey(): vector&lt;string&gt;
+createGamePrompt(status: InputStatus): vector&lt;string&gt;
+createPlaceShipPrompt(status: InputStatus): vector&lt;string&gt;
+print(lines: vector&lt;string&gt;): void
+clearBadGameInput(placed: bool): void
+clearBadPlaceShipInput(placed: bool): void
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>110</x>
      <y>550</y>
      <w>630</w>
      <h>630</h>
    </coordinates>
    <panel_attributes>LocalBoardCommander
--
-_player: Player
-_mode: GameMode
-_game_id: string
-_session_id: const string &amp;
-_my_board: vector&lt;vector&lt;Cell&gt;&gt;
-_their_board: vector&lt;vector&lt;Cell&gt;&gt;
-_my_username: string
-_their_username: string
-_client: shared_ptr&lt;GameClient&gt;
-_is_finished: bool
-_is_victory: bool
--
+myTurn(): bool
+isFinished(): bool
+isVictory(): bool
+width(): size_t
+height(): size_t
+mode(): GameMode
+player(): Player
+cellType(my_side: bool, coordinates: BoardCoordinates): CellType
+isSameShip(my_side: bool, first: BoardCoordinates, second: BoardCoordinates): bool
+getNeighbors(coord: BoardCoordinates): vector&lt;Cell&gt;
+shipsToPlace(): PossibleShips
+allShipsPlaced(): bool
+isShipAvailable(size: int): bool
+getPlacedShips(): vector&lt;Ship&gt;
+placeShip(ship: Ship): void
+waitGame(): bool
+waitTurn(): void
+update(): void
+best(lhs: CellType, rhs: CellType): CellType
+string_to_celltype(type: const string &amp;): CellType
+update_board(new_board: const nlohmann::json &amp;): void
+isInBoard(coord: BoardCoordinates): bool
+fire(ability: SpecialAbility, coordinates: BoardCoordinates): void
+getMyUsername(): string
+getTheirUsername(): string
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>140</x>
      <y>320</y>
      <w>500</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>GameView
--
+myTurn(): bool
+isFinished(): bool
+isVictory(): bool
+width(): std::size_t
+height(): std::size_t
+cellType(my_side: bool, coordinates: BoardCoordinates): CellType

bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1270</x>
      <y>430</y>
      <w>430</w>
      <h>230</h>
    </coordinates>
    <panel_attributes>GameController
--
-board: std::shared_ptr&lt;LocalBoardCommander&gt;
-display: std::shared_ptr&lt;Display&gt;
--
+setDisplay(display: std::shared_ptr&lt;Display&gt;): void
+fire(coord: BoardCoordinates): bool
+placeShip(coord: ShipCoordinates): bool
+sendShips(boats: std::vector&lt;ShipCoordinates&gt;): void
+connectServer(): void
+quit(): void
-checkShipPosition(coord: ShipCoordinates): bool
-checkShipsInBoard(coord: ShipCoordinates): bool
-sendRequest(coord: ShipCoordinates): bool
-sendRequest(coord: BoardCoordinates): bool
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>480</x>
      <y>450</y>
      <w>30</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>790</x>
      <y>330</y>
      <w>280</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>GameGui
--
+display():void
+display_error():void
+update():void  +handle_input
(BoardCoordinates user_input):void
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>730</x>
      <y>690</y>
      <w>90</w>
      <h>40</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;70.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>730</x>
      <y>380</y>
      <w>80</w>
      <h>290</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;270.0;40.0;270.0;40.0;10.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>650</x>
      <y>300</y>
      <w>690</w>
      <h>270</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;250.0;10.0;20.0;670.0;20.0;670.0;130.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1240</x>
      <y>490</y>
      <w>50</w>
      <h>40</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;30.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1060</x>
      <y>370</y>
      <w>250</w>
      <h>80</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;20.0;230.0;20.0;230.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>0</x>
      <y>630</y>
      <w>130</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>GameClient</panel_attributes>
    <additional_attributes>110.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1270</x>
      <y>710</y>
      <w>360</w>
      <h>380</h>
    </coordinates>
    <panel_attributes>Player
--
-_faction: Faction
-_fleet: vector&lt;Ship&gt;
-_is_turn: bool
-_energy_points: int
-_is_player_one: bool
--
+Player()
+Player(faction: Faction)
+~Player()
+Player(other: const Player&amp;)
+operator=(other: const Player&amp;): Player&amp;
+getFaction(): Faction
+getFleet(): vector&lt;Ship&gt;
+isTurn(): bool
+getEnergyPoints(): int
+isPlayerOne(): bool
+setFaction(faction: Faction): void
+addShip(ship: Ship): void
+setTurn(is_turn: bool): void
+addEnergyPoints(energy_points: int): void
+removeEnergyPoints(energy_points: int): void
+setPlayerOne(is_player_one: bool): void
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>730</x>
      <y>1080</y>
      <w>600</w>
      <h>50</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;30.0;580.0;30.0;580.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1620</x>
      <y>840</y>
      <w>120</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>Faction</panel_attributes>
    <additional_attributes>10.0;20.0;100.0;20.0</additional_attributes>
  </element>
</diagram>
